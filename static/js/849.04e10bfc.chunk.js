"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[849],{5849:function(e,r,n){n.r(r),n.d(r,{WalletLinkConnector:function(){return c}});var t=n(6110);function o(){return o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},o.apply(this,arguments)}function i(e,r){return i=Object.setPrototypeOf||function(e,r){return e.__proto__=r,e},i(e,r)}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var c=function(e){var r,t;function c(r){var n,t=r.url,o=r.appName,i=r.appLogoUrl,c=r.darkMode,u=r.supportedChainIds;return(n=e.call(this,{supportedChainIds:u})||this).url=t,n.appName=o,n.appLogoUrl=i,n.darkMode=c||!1,n.handleChainChanged=n.handleChainChanged.bind(a(n)),n.handleAccountsChanged=n.handleAccountsChanged.bind(a(n)),n}t=e,(r=c).prototype=Object.create(t.prototype),r.prototype.constructor=r,i(r,t);var u=c.prototype;return u.activate=function(){try{var e=this,r=function(){return Promise.resolve(e.provider.request({method:"eth_requestAccounts"})).then((function(r){var n=r[0];return e.provider.on("chainChanged",e.handleChainChanged),e.provider.on("accountsChanged",e.handleAccountsChanged),{provider:e.provider,account:n}}))},t=function(){if(window.ethereum&&!0===window.ethereum.isCoinbaseWallet)e.provider=window.ethereum;else{var r=function(){if(!e.walletLink)return Promise.resolve(Promise.all([n.e(354),n.e(26),n.e(282)]).then(n.bind(n,8026)).then((function(e){var r;return null!=(r=null==e?void 0:e.default)?r:e}))).then((function(r){e.walletLink=new r(o({appName:e.appName,darkMode:e.darkMode},e.appLogoUrl?{appLogoUrl:e.appLogoUrl}:{})),e.provider=e.walletLink.makeWeb3Provider(e.url,1)}))}();if(r&&r.then)return r.then((function(){}))}}();return Promise.resolve(t&&t.then?t.then(r):r())}catch(i){return Promise.reject(i)}},u.getProvider=function(){try{return Promise.resolve(this.provider)}catch(e){return Promise.reject(e)}},u.getChainId=function(){try{return Promise.resolve(this.provider.chainId)}catch(e){return Promise.reject(e)}},u.getAccount=function(){try{return Promise.resolve(this.provider.request({method:"eth_requestAccounts"})).then((function(e){return e[0]}))}catch(e){return Promise.reject(e)}},u.deactivate=function(){this.provider.removeListener("chainChanged",this.handleChainChanged),this.provider.removeListener("accountsChanged",this.handleAccountsChanged)},u.close=function(){try{return this.provider.close(),this.emitDeactivate(),Promise.resolve()}catch(e){return Promise.reject(e)}},u.handleChainChanged=function(e){this.emitUpdate({chainId:e})},u.handleAccountsChanged=function(e){this.emitUpdate({account:e[0]})},c}(t.Q)}}]);